<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoGeneratedRunConfigurationManager">
    <projectFile profileName="http">EFCoreTestApi/EFCoreTestApi.csproj</projectFile>
    <projectFile profileName="https">EFCoreTestApi/EFCoreTestApi.csproj</projectFile>
    <projectFile profileName="http">Manager.Api/Manager.Api.csproj</projectFile>
    <projectFile profileName="https">Manager.Api/Manager.Api.csproj</projectFile>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="8a8907ca-20c7-44c3-bec4-f3f5e6238752" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/Manager.Api/Program.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager.Infrastructure/Configurations/ClassRoomConfiguration.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager.Infrastructure/Configurations/DepartmentConfiguration.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager.Infrastructure/Configurations/FacultyConfiguration.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager.Infrastructure/Configurations/GroupConfiguration.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager.Infrastructure/Configurations/LecturerConfiguration.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager.Infrastructure/Configurations/ScheduleConfiguration.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager.Infrastructure/Configurations/StudentConfiguration.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager.Infrastructure/Configurations/SubjectConfiguration.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager.Infrastructure/Entities/ClassRoom.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager.Infrastructure/Entities/Department.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager.Infrastructure/Entities/Faculty.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager.Infrastructure/Entities/Group.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager.Infrastructure/Entities/Lecturer.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager.Infrastructure/Entities/Schedule.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager.Infrastructure/Entities/Student.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager.Infrastructure/Entities/Subject.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager.Infrastructure/InstituteDbContext.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager.Infrastructure/Manager.Infrastructure.csproj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.EFCoreTestApi/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.EFCoreTestApi/.idea/indexLayout.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.EFCoreTestApi/.idea/misc.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.EFCoreTestApi/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/EFCoreTestApi.sln" beforeDir="false" afterPath="$PROJECT_DIR$/UniversityDataBaseManager.sln" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/EFCoreTestApi/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/Manager.Api/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/EFCoreTestApi/EFCoreTestApi.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/Manager.Api/Manager.Api.csproj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/EFCoreTestApi/EFCoreTestApi.http" beforeDir="false" afterPath="$PROJECT_DIR$/Manager.Api/EFCoreTestApi.http" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/EFCoreTestApi/Program.cs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/EFCoreTestApi/Properties/launchSettings.json" beforeDir="false" afterPath="$PROJECT_DIR$/Manager.Api/Properties/launchSettings.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/EFCoreTestApi/appsettings.Development.json" beforeDir="false" afterPath="$PROJECT_DIR$/Manager.Api/appsettings.Development.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/EFCoreTestApi/appsettings.json" beforeDir="false" afterPath="$PROJECT_DIR$/Manager.Api/appsettings.json" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/53e3e589abf25c9665f0c3fa51713e5c1fade57fffd988cfccece4acd0b99db/Group.cs" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2mhALGfnVAq0zzzECp47ix0qzaA" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
  }
}</component>
  <component name="RunManager" selected="Docker.docker-compose.yml: Compose Deployment">
    <configuration name="Manager.Api: http" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/Manager.Api/Manager.Api.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="http" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="Manager.Api: https" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/Manager.Api/Manager.Api.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="https" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="Manager.Api/Dockerfile: Compose Deployment" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="efcoretestapi" />
          <option name="containerName" value="efcoretestapi" />
          <option name="contextFolderPath" value="$PROJECT_DIR$" />
          <option name="portBindings">
            <list>
              <DockerPortBindingImpl>
                <option name="containerPort" value="8080" />
                <option name="hostIp" value="127.0.0.1" />
                <option name="hostPort" value="8080" />
              </DockerPortBindingImpl>
            </list>
          </option>
          <option name="sourceFilePath" value="Manager.Api/Dockerfile" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="VcsManagerConfiguration">
    <option name="LOCAL_CHANGES_DETAILS_PREVIEW_SHOWN" value="false" />
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
  </component>
</project>